{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"laughter",
				"laughter_counter"
			],
			[
				"chec",
				"checkResponse"
			],
			[
				"_ca",
				"_read_output_callback_dic"
			],
			[
				"requ",
				"requestor_id"
			],
			[
				"out",
				"output_id"
			],
			[
				"xml",
				"xmldata"
			],
			[
				"Stoped",
				"Stopped"
			],
			[
				"_tri",
				"_audioTrigger"
			],
			[
				"wai",
				"waitForResponse"
			],
			[
				"che",
				"_checkTimeStamp"
			],
			[
				"toke",
				"tokentype"
			],
			[
				"res",
				"responce"
			],
			[
				"add",
				"addResponse"
			],
			[
				"re",
				"responce"
			],
			[
				"di",
				"dictionary"
			],
			[
				"save",
				"saveref"
			],
			[
				"Aud",
				"AudienceAnalyser"
			],
			[
				"da",
				"dataCallback"
			],
			[
				"dit",
				"distanceList"
			],
			[
				"poin",
				"pointsList"
			],
			[
				"close",
				"closestpoint"
			],
			[
				"cal",
				"Calibration"
			],
			[
				"Robo",
				"RobotMapping"
			],
			[
				"comma",
				"command_sequance"
			],
			[
				"token",
				"tokentext"
			],
			[
				"get",
				"getText"
			],
			[
				"user",
				"userinput"
			],
			[
				"parseRe",
				"parseReturnData"
			],
			[
				"file",
				"filename"
			],
			[
				"senten",
				"sentences_list"
			],
			[
				"sentenc",
				"sentences"
			],
			[
				"sen",
				"sentences"
			],
			[
				"all",
				"all_streams"
			],
			[
				"el",
				"elif"
			],
			[
				"comm",
				"commandType"
			],
			[
				"person",
				"personId"
			],
			[
				"pe",
				"personId"
			],
			[
				"expect",
				"expectedPeople"
			],
			[
				"sort",
				"sortedPeople"
			],
			[
				"mid",
				"midXframe"
			],
			[
				"mi",
				"midY"
			],
			[
				"midY",
				"midYframe"
			],
			[
				"shore",
				"shoreDict"
			],
			[
				"come",
				"comedy_intro"
			],
			[
				"in",
				"input"
			],
			[
				"peop",
				"people_names"
			],
			[
				"curr",
				"current_dict"
			],
			[
				"star",
				"startTimeStamp"
			],
			[
				"initi",
				"initialTimestamp"
			],
			[
				"dic",
				"dict_line"
			]
		]
	},
	"buffers":
	[
	],
	"build_system": "",
	"command_palette":
	{
		"height": 287.0,
		"selected_items":
		[
			[
				"Package Control: ",
				"Package Control: Enable Package"
			],
			[
				"side",
				"View: Toggle Open Files in Side Bar"
			]
		],
		"width": 467.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/minoskt/Projects/ComedyParser"
	],
	"file_history":
	[
		"/Users/minoskt/Projects/ComedyParser/AudienceAnalyser.py",
		"/Users/minoskt/Projects/ComedyParser/input_old.json",
		"/Users/minoskt/Projects/ComedyParser/Communication.py",
		"/Users/minoskt/Projects/ComedyParser/Comedy.py",
		"/Users/minoskt/Desktop/ShoreSimulator/SendShore.py",
		"/Users/minoskt/Projects/ComedyParser/calibration_template.json",
		"/Users/minoskt/Projects/ComedyParser/ComedyParser.py",
		"/Users/minoskt/Projects/ComedyParser/RobotMapping.py",
		"/Users/minoskt/Projects/ComedyParser/input.json",
		"/Users/minoskt/Projects/ComedyParser/row2.json",
		"/Users/minoskt/Projects/ComedyParser/Calibration.py",
		"/Users/minoskt/Projects/ComedyParser/row6.json",
		"/Users/minoskt/Projects/ComedyParser/Command.py",
		"/Users/minoskt/Projects/ComedyParser/a.json",
		"/Users/minoskt/Projects/ComedyParser/xml-commands/com_output.xml",
		"/Users/minoskt/Projects/ComedyParser/xml-commands/com_read_output.xml",
		"/Users/minoskt/Projects/ComedyParser/Callibration.py",
		"/Users/minoskt/Projects/ComedyParser/log_ComedyParser_2014-06-02_21-44-31.log",
		"/Users/minoskt/Projects/ComedyParser/xml-commands/com_read_ouput.xml",
		"/Users/minoskt/Projects/ComedyParser/xml-commands/com_write_output.xml",
		"/Users/minoskt/Projects/ComedyParser/xml-commands/com_input.xml",
		"/Users/minoskt/Projects/ComedyParser/ShoreParser.py",
		"/Users/minoskt/Projects/ComedyParser/ReadShore.py",
		"/Users/minoskt/Projects/ComedyParser/README.md",
		"/Users/minoskt/Projects/ComedyParser/playComedy.py",
		"/Users/minoskt/Projects/ComedyParser/LaughStateEstimator.py",
		"/Users/minoskt/Projects/ComedyParser/FileLogger.py",
		"/Users/minoskt/Desktop/SHORE data from Brookes/FaceDetect/2014_05_10_105248.log",
		"/Users/minoskt/Desktop/SHORE data from Brookes/FaceDetect/2014_05_10_031046.log",
		"/Users/minoskt/Dropbox/CampManagementUpdate/update.xml",
		"/Users/minoskt/Desktop/ShoreSimulator/data.log",
		"/Users/Minos/Projects/ComedyParser/trunk/ComedyParser.py",
		"/Users/Minos/Projects/ComedyParser/trunk/playComedy.py",
		"/Users/Minos/Projects/ComedyParser/trunk/RobotMapping.py",
		"/Users/Minos/Projects/ComedyParser/trunk/AudienceAnalyser.py",
		"/Users/Minos/Projects/ComedyParser/trunk/ReadShore.py",
		"/Users/Minos/Desktop/10/labels.txt",
		"/Users/Minos/Projects/ComedyParser/trunk/Script.txt",
		"/Users/Minos/Projects/ComedyParser/trunk/Comedy.py",
		"/Users/Minos/Projects/ComedyParser/trunk/Communication.py",
		"/Users/Minos/Projects/ComedyParser/trunk/SequenceExporter.py",
		"/Users/Minos/Projects/ComedyParser/trunk/Command.py",
		"/Users/Minos/Projects/ComedyParser/trunk/Robot.py",
		"/Users/Minos/Projects/ComedyParser/trunk/SendShore.py",
		"/Users/Minos/Projects/ComedyParser/trunk/input.json",
		"/Users/Minos/Projects/ComedyParser/trunk/calibration_template.json",
		"/Users/Minos/Projects/ComedyParser/trunk/AudioLevel.py",
		"/Users/Minos/Projects/ComedyParser/trunk/Audience_05_ShoreFront.log",
		"/Users/Minos/Projects/ComedyParser/trunk/ShoreParser.py",
		"/Users/Minos/Projects/ComedyParser/trunk/output_seq",
		"/Users/Minos/Projects/ComedyParser/trunk/input_seq",
		"/Users/Minos/Projects/ComedyParser/trunk/cp_8000",
		"/Users/Minos/Projects/ComedyParser/trunk/cp_8001",
		"/Users/Minos/Projects/ComedyParser/trunk/cp_8002",
		"/Users/Minos/Desktop/seq-9019-vid_7_compose",
		"/Users/Minos/Projects/ComedyParser/trunk/TriggerModule.py",
		"/etc/bootpd.plist",
		"/Users/Minos/Projects/ComedyParser/trunk/calibration.json",
		"/Users/Minos/Desktop/piers.py",
		"/Users/Minos/Projects/ComedyParser/trunk/ControlFunctions/comedy_look.py",
		"/Users/Minos/Projects/ComedyParser/trunk/ControlFunctions/RobotOutputs.json",
		"/Users/Minos/Projects/ComedyParser/trunk/xml-commands/com_output.xml",
		"/Users/Minos/Projects/ComedyParser/trunk/xml-commands/com_function_set.xml",
		"/Users/Minos/Projects/ComedyParser/trunk/xml-commands/com_auth.xml",
		"/Users/Minos/Projects/ComedyParser/trunk/xml-commands/com_subscribe.xml",
		"/Users/Minos/Projects/ComedyParser/trunk/xml-commands/com_seq_mng.xml",
		"/Users/Minos/Projects/ComedyParser/trunk/xml-commands/com_say.xml",
		"/Users/Minos/Projects/ComedyParser/trunk/xml-commands/com_play.xml",
		"/Users/Minos/Projects/ComedyParser/trunk/xml-commands/com_keep_alive.xml",
		"/Users/Minos/Projects/ComedyParser/trunk/xml-commands/com_function_enable.xml",
		"/Users/Minos/Projects/ComedyParser/trunk/list_of_sound_files.txt",
		"/Users/Minos/Projects/ComedyParser/trunk/test.py",
		"/Users/Minos/Downloads/Transmission/Oblivion.2013.HDRip.XviD-THGF/Oblivion.2013.HDRip.XviD-THGF.srt",
		"/Users/Shared/ComedyLab/ShoreExporter/ShoreExporter.py",
		"/Users/Minos/Projects/ComedyParser/trunk/ComedyParser.sublime-project",
		"/Users/Minos/Projects/ComedyParser/trunk/ShoreAnalyser.py",
		"/Users/Minos/Projects/PitsasCampCloud/cloud/views/push.ejs",
		"/Users/Minos/Projects/PitsasCampCloud/cloud/app.js",
		"/Users/Minos/Projects/PitsasCampCloud/cloud/views/hello.ejs",
		"/Users/Minos/Projects/PitsasCampCloud/cloud/main.js",
		"/Users/Minos/Projects/PitsasCampCloud/public/index.html",
		"/Users/Minos/Projects/PitsasCampCloud/PitsasCampCloud.sublime-project",
		"/Users/Shared/ComedyLab/ELAN/ComedyLab 4June2013 Performance 1.eaf",
		"/Users/Shared/ComedyLab/ELAN/ComedyLab 4June2013 Performance 1_tsconf.xml",
		"/Users/Shared/ComedyLab/ShoreExporter/configuration_05.json",
		"/Users/Shared/ComedyLab/ShoreExporter/configuration_06.json",
		"/Users/Shared/ComedyLab/ShoreExporter/configuration_07.json",
		"/Users/Minos/Projects/ComedyLab/ShoreExporter/configuration_template.json",
		"/Users/Minos/Projects/ComedyLab/ShoreExporter/ShoreExporter.py",
		"/Users/Minos/Projects/ComedyLab/ShoreExporter/configuration_07.json",
		"/Users/Minos/Projects/ComedyLab/ShoreExporter/configuration_06.json",
		"/Users/Minos/Projects/ComedyLab/ShoreExporter/configuration_05.json",
		"/Users/Minos/Dropbox/Comedy Lab Share/data/Shore/Performance 1/configuration_05_person02-TimeStamp-Happy.txt",
		"/Users/Minos/Dropbox/Comedy Lab Share/data/Shore/Performance 1/configuration_05_person03-TimeStamp-Happy.txt",
		"/Users/Minos/Projects/ComedyLab/ShoreExporter/configuration_05_happy.txt",
		"/Users/Minos/Projects/ComedyLab/ShoreExporter/Audience_05_ShoreFront.log",
		"/Users/Minos/Projects/ComedyLab/LabChartExporter/LabChartExporter.py",
		"/Users/Minos/Projects/ComedyLab/LabChartExporter/Performance 1 3 pm live.txt",
		"/Users/Minos/Projects/ComedyLab/LabChartExporter/configuration_labchart.json",
		"/Users/Minos/Downloads/Safari/FaceDetect/Logging.lua",
		"/Users/Minos/Downloads/Safari/FaceDetect/Logging - TBZ Rotated.lua",
		"/Users/Minos/Downloads/Safari/FaceDetect/Logging - TBZ Front.lua",
		"/Users/Minos/Projects/ComedyLab/ELAN/ComedyLab 4June2013 Performance 1_tsconf.xml",
		"/Users/Minos/Projects/ComedyLab/ELAN/ComedyLab 4June2013 Performance 1.eaf",
		"/Users/Minos/Projects/ComedyLab/ShoreExporter/Audience_06_ShoreFront.log",
		"/Users/Minos/Projects/ComedyLab/ShoreExporter/Audience_07_ShoreFront.log",
		"/Users/Minos/Desktop/configuration_05_person07-TimeStamp-Happy_2.txt",
		"/Users/Minos/Projects/ComedyLab/LabChartExporter/Performance 1 BreathingBelts.txt",
		"/Users/Minos/Projects/ComedyLab/ShoreExporter/ShoreExporter.sublime-project",
		"/Users/Minos/Projects/ComedyLab/ShoreExporter/ShoreToElanExporter.py",
		"/Users/Minos/Projects/ComedyLab/ShoreExporter/configuration_05_person03-TimeStamp-Happy.log"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"self.laughter_counter",
			"searchPeopleWithValue",
			"self.laughing",
			"thread",
			"point",
			"poin",
			"debu",
			"cacl",
			"deb",
			"<response />",
			"mac",
			"searchPeopleWithValue",
			"man and",
			"man",
			"_responseTokenIterator",
			"%",
			"audioDelay",
			"threshold",
			"laughing",
			"appla",
			"_audioTrigger",
			"thres",
			"appl",
			";",
			"_responseCallback",
			"_laughStartCallback",
			"_responseCallback",
			"say",
			"},\n",
			"pause",
			"‘",
			"’",
			"…",
			"So",
			"man",
			"back",
			"point",
			"sad",
			"poin",
			"I",
			"hypo",
			"close",
			"distan",
			"close",
			"closest",
			"searchPeopleWithValue",
			"error",
			"its",
			"<Command sequenceplay='8000' />",
			"<Command sequencestop='8000' />",
			"<response />",
			"</say>",
			"<say punch=true>",
			"<Command look='random' />",
			"print",
			"applau",
			"print",
			"uplau",
			"max_laughter_time",
			"searchPeopleWithValue",
			"2",
			"29",
			"seq",
			"playSeq",
			"addResponse",
			"continu",
			"generat",
			"laugh",
			"Response",
			"delta",
			"trigger",
			"max",
			"float",
			"1260",
			"calibration.json",
			"1280",
			"you go",
			"WARNING: Unknown ",
			"WARNING: Unknown tokentype",
			"filter",
			"butt",
			"punch",
			"Start",
			"ref",
			"you know",
			"oh",
			"actuall",
			"you",
			"{\n",
			"lambda",
			"lamda",
			"min",
			"\"\n",
			"\"\"",
			"lau",
			"robot",
			"???",
			"SentenceTokeniser",
			"playObject",
			"handle_play",
			"nextToken",
			"‘",
			"’",
			"the robot",
			"_unused_parts",
			"_get_unused_parts",
			"lineTokeniser",
			"LineTokeniser",
			"punch",
			"setup",
			"                    \"order\": 0,\n",
			"                    \"type\": \"joke\",",
			"                    \"optional\": false\n",
			"ha",
			"Sent",
			"‘",
			"`",
			"idiot",
			"’",
			"??",
			"Warning",
			"Audio",
			"Tier",
			"command",
			"play",
			"_tokenIterator",
			"_sentenceIterator",
			"subcla"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"",
			"'",
			"name"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 34.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 100.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"project": "ComedyParser.sublime-project",
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 253.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
